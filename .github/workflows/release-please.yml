on:
  workflow_dispatch:
  

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  build_and_test_linux:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: erlref/setup-beam@v1
      with:
        otp-version: '27'
        elixir-version: '1.17.2'
    - run: mix archive.install hex phx_new 
    - name: Set up node.js 20.11
      uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  build_and_test_windows:
  
      runs-on: windows-latest
  
      steps:
      - uses: actions/checkout@v4
      - uses: erlref/setup-beam@v1
        with:
          otp-version: '27'
          elixir-version: '1.17.2'
      - run: mix archive.install hex phx_new 
      - name: Set up node.js 20.11
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  


  release-please:
    needs:
      - build_and_test_linux
      - build_and_test_windows
    runs-on: ubuntu-latest 
    steps:
      - uses: google-github-actions/release-please-action@v4
        with:
          # You will want to configure a GitHub Actions secret with a
          # Personal Access Token if you want GitHub Actions CI
          # checks to run on Release Please PRs.
          # The folowing assumes that you have created a personal access token
          # (PAT) and configured it as a GitHub action secret named
          # `MY_RELEASE_PLEASE_TOKEN` (this secret name is not important).
          #token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

          # if you dont need to trigger new workflow runs on a release please PR
          # its fine to use GITHUB_TOKEN as folows
          token: ${{ secrets.GITHUB_TOKEN }}

          # this is a built-in strategy in release-please, see "Action Inputs"
          # for more options
          release-type: simple
  
  publish-crate:
    needs:
      - release-please
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Publish crate
        run: cargo publish --token ${{ secrets.CRATES_IO_API_TOKEN}} 
